
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    server {
        listen 80;
        server_name chat.example.com groups.chat.example.com share.chat.example.com;
        location / {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;
            proxy_pass http://127.0.0.1:81/;
            proxy_redirect off;

        }
    }
 


    include /etc/nginx/conf.d/*.conf;
}
stream {


    resolver 8.8.8.8;

    upstream vpn {
    server 127.0.0.1:446;
    }

    upstream web2 {
    server 127.0.0.1:445;
    }

    upstream web {
    server 127.0.0.1:449;
    }

    map $ssl_preread_server_name $name {
    #    volatile;
        xp.example.com unix:/run/nginx-trojan-stream.sock;
        chat.example.com web2;
        share.chat.example.com web2;
        groups.chat.example.com web2;
        default        web;
    }
    server {
        listen unix:/run/nginx-trojan-stream.sock proxy_protocol;
        proxy_pass 127.0.0.1:447;
    }


    log_format stream_routing '$remote_addr [$time_local] '
                              'with SNI name "$ssl_preread_server_name" '
                              'proxying to "$name" '
                              '$protocol $status $bytes_sent $bytes_received '
                              '$session_time';
      server {
      listen 443 reuseport;
      #listen 443;
      proxy_pass $name;
      proxy_protocol on;
      ssl_preread on;
      access_log /var/log/nginx/stream_443.log stream_routing;
      }


}
